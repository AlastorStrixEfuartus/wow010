local int base = 0x91CB + 0x8; //FTell();

typedef struct 
{
	int ofd1;
	int used;
	int ofd2;
} list<read=readlist>;

typedef struct 
{
	local int chunk = -1;
	short flags;
	short type;
	float height1;
	float height2;
	char xoff;
	char yoff;
	char w;
	char h;
	int of2a;
	int of2b;
} D1<read=readD1>;

typedef struct 
{
	local int chunk = -1;
	char a[8];
	char b[8];
} D2<read=readD2>;

string readlist(list &o) {
	string s;
	SPrintf( s, "%i - x%x, x%x", o.used, o.ofd1, o.ofd2);
	return s;
}

string readD1(D1 &o) {
	string s;
	SPrintf( s, "[%i] %i (%i) - x%x, x%x", o.chunk,o.flags, o.type, o.of2a, o.of2b);
	return s;
}

string readD2(D2 &o) {
	string s;
	
	SPrintf( s, "[%i] %s (%s)", o.chunk, o.a, o.b);
	return s;
}

typedef struct
{
	local int i;
	local int j=0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 1)
		{
			FSeek( lis[i].ofd1 + base );
			D1 entries1;
			entries1[j].chunk = i;
			j++;
		}
	}
	j=0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 2)
		{
			FSeek( lis[i].ofd1 + base );
			D1 entries2;
			entries2[j].chunk = i;
			j++;
		}
	}
} data1;

typedef struct
{
	local int i;
	local int j=0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 1)
		{
			FSeek( lis[i].ofd2 + base );
			D2 entries1;
			entries1[j].chunk = i;
			j++;
		}
	}
	j=0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 2)
		{
			FSeek( lis[i].ofd2 + base );
			D2 entries2;
			entries2[j].chunk = i;
			j++;
		}
	}
} data2;

typedef struct
{
	local int i;
	local int j = 0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 1)
		{
			if(D1_.entries1[j].of2a != 0)
			{
				FSeek( D1_.entries1[j].of2a + base );
				typedef struct
				{
					local int chunk = i;
					local int rows = D1_.entries1[j].h;
					char a[D1_.entries1[j].h];
				} bitmap1<read=readBM1>;
				bitmap1 BM1;
			}
			j++;
		}
	}
	j = 0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 2)
		{
			if(D1_.entries2[j].of2a != 0)
			{
				FSeek( D1_.entries2[j].of2a + base );
				typedef struct
				{
					local int chunk = i;
					local int rows = D1_.entries2[j].h;
					char a[D1_.entries2[j].h];
				} bitmap2<read=readBM2>;
				bitmap2 BM2;
			}
			j++;
		}
	}
} data2a;

typedef struct
{
	local int i;
	local int j = 0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 1)
		{
			if(D1_.entries1[j].of2b != 0)
			{
				FSeek( D1_.entries1[j].of2b + base );
				typedef struct
				{
					local int chunk = i;
					local int rows = D1_.entries1[j].h;
					local int cols = D1_.entries1[j].w;
					
					if (D1_.entries1[j].type != 2)
					float map[(cols+1)*(rows+1)];
					char info[(cols+1)*(rows+1)];
				} heights1<read=readH1>;
				heights1 H1;
			}
			j++;
		}
	}
	j = 0;
	for(i=0; i<256; i++)
	{
		if (lis[i].used == 2)
		{
			if(D1_.entries2[j].of2b != 0)
			{
				FSeek( D1_.entries2[j].of2b + base );
				typedef struct
				{
					local int chunk = i;
					local int rows = D1_.entries2[j].h;
					local int cols = D1_.entries2[j].w;
					
					if (D1_.entries2[j].type != 2)
					float map[(cols+1)*(rows+1)];
					char info[(cols+1)*(rows+1)];
				} heights2<read=readH2>;
				heights2 H2;
			}
			j++;
		}
	}
} data2b;

typedef struct
{
FSeek( base );
list lis[256];
    data1 D1_;
    data2 D2_;
    
    data2a D2a;
    data2b D2b;
} MH2O;

MH2O water;

string readH1(heights1 &o) {
	string s;
	SPrintf( s, "[%i] %i x %i", o.chunk, o.rows, o.cols);
	return s;
}
string readH2(heights2 &o) {
	string s;
	SPrintf( s, "[%i] %i x %i", o.chunk, o.rows, o.cols);
	return s;
}

string readBM1(bitmap1 &o) {
	string s;
	SPrintf( s, "[%i] %s", o.chunk, o.a);
	return s;
}
string readBM2(bitmap2 &o) {
	string s;
	SPrintf( s, "[%i] %s", o.chunk, o.a);
	return s;
}